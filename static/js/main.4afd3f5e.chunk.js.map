{"version":3,"sources":["components/Controls/Controls.module.css","components/Balance/Balance.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","components/App.js","index.js"],"names":["module","exports","Controls","value","handleClick","handleChange","className","styles","controls","type","onChange","name","onClick","Balance","balance","deposit","withdraw","TransactionHistory","transactions","history","map","transaction","key","id","amount","date","Dashboard","state","target","setState","e","parseFloat","Date","shortid","generate","toLocaleString","toast","error","reset","warning","push","updateBalance","prevValue","persistedTransaction","localStorage","getItem","this","JSON","parse","prevProp","setItem","stringify","dashboard","Component","configure","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","rtl","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4afd3f5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__1cZa4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__nBPmO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__2gZhb\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\n\nconst Controls = ({ value, handleClick, handleChange }) => {\n  return (\n    <section className={styles.controls}>\n      <input type=\"number\" value={value} onChange={handleChange} />\n      <button type=\"button\" name=\"deposit\" onClick={handleClick}>\n        Deposit\n      </button>\n      <button type=\"button\" name=\"withdraw\" onClick={handleClick}>\n        Withdraw\n      </button>\n    </section>\n  );\n};\n\nControls.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ balance, deposit, withdraw }) => (\n  <section className={styles.balance}>\n    <span>&#8593; {`${deposit}$`}</span>\n    <span>&#8595; {`${withdraw}$`}</span>\n    <span>Balance: {`${balance}`}</span>\n  </section>\n);\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  deposit: PropTypes.number.isRequired,\n  withdraw: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  return (\n    <table className={styles.history}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map(transaction => (\n          <tr key={transaction.id}>\n            <td>{transaction.type}</td>\n            <td>{transaction.amount}$</td>\n            <td>{transaction.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { toast } from 'react-toastify';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport styles from './Dashboard.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Dashboard extends Component {\n  state = {\n    balance: 0,\n    transactions: [],\n    value: '',\n    deposit: 0,\n    withdraw: 0,\n  };\n\n  componentDidMount() {\n    const persistedTransaction = localStorage.getItem('transactions');\n    if (persistedTransaction) {\n      this.setState({\n        transactions: JSON.parse(persistedTransaction),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProp) {\n    const { transactions } = this.state;\n    if (prevProp.transactions !== transactions) {\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n    }\n  }\n\n  handleChange = ({ target }) => {\n    const { value } = target;\n    this.setState({\n      value,\n    });\n  };\n\n  handleClick = e => {\n    const { balance } = this.state;\n    const { name } = e.target;\n    const value = parseFloat(this.state.value);\n    const date = new Date();\n\n    const transaction = {\n      id: shortid.generate(),\n      type: name,\n      amount: value,\n      date: date.toLocaleString(),\n    };\n    if (name === 'withdraw' && value > balance) {\n      toast.error('На счету недостаточно средств для проведения операции!');\n      this.reset();\n    } else if (this.state.value === '' || value <= 0) {\n      toast.warning('Введите сумму для проведения операции!');\n      this.reset();\n    } else {\n      this.setState(\n        state => {\n          state.transactions.push(transaction);\n        },\n        () => this.updateBalance(name, value),\n      );\n      this.reset();\n    }\n  };\n\n  updateBalance = (name, value) => {\n    if (name === 'deposit') {\n      this.setState(prevValue => ({\n        deposit: prevValue.deposit + value,\n        balance: prevValue.balance + value,\n      }));\n    } else {\n      this.setState(prevValue => ({\n        withdraw: prevValue.withdraw + value,\n        balance: prevValue.balance - value,\n      }));\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      value: '',\n    });\n  };\n\n  render() {\n    const { balance, withdraw, deposit, transactions } = this.state;\n    const { value } = this.state;\n    return (\n      <div className={styles.dashboard}>\n        <Controls\n          value={value}\n          handleChange={this.handleChange}\n          handleClick={this.handleClick}\n          onChange={this.handleChange}\n        />\n        <Balance balance={balance} withdraw={withdraw} deposit={deposit} />\n        <TransactionHistory transactions={transactions} />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport { toast } from 'react-toastify';\nimport Dashboard from './Dashboard/Dashboard';\n\ntoast.configure({\n  position: 'bottom-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  rtl: false,\n});\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}